version: "3.7"

networks:
  botmydesk-internal: { }

services:
  app:
    build:
      # See Dockerfile for build arguments available for override
      context: .
      target: prod-app
      dockerfile: Dockerfile
    expose:
      # Expose ensures Docker manages any scaling/mapping internally when using --scale in Compose deploys.
      - "8000"
    restart: always
    depends_on:
      - database
      - queue_broker
      - prod_web
    networks:
      - botmydesk-internal
    env_file:
      - .env

  # @TODO 1: Choose database name (e.g. "botmydesk") and use below as POSTGRES_DB and in .env as DJANGO_DATABASE_NAME value for "app" container
  # @TODO 2: Choose user (e.g. "botmydesk_user") and use below as POSTGRES_USER and in .env as DJANGO_DATABASE_USER value for "app" container
  # @TODO 3: Generate password (e.g. "xxd -l 30 -ps /dev/urandom") and use below as POSTGRES_PASSWORD and in .env as DJANGO_DATABASE_PASSWORD value for "app" container
  database:
    # To access on command-line: docker-compose -f docker-compose.override.yml exec database psql -h localhost -d botmydesk -U botmydesk_user
    image: postgres:14
    restart: always
    volumes:
      - ./docker/postgres:/var/lib/postgresql/
    networks:
      - botmydesk-internal
    environment:
      - POSTGRES_DB=
      - POSTGRES_USER=
      - POSTGRES_PASSWORD=

  app_task_scheduler:  # Required for background processing
    build:
      context: .
      target: prod-app-scheduler
    restart: always
    depends_on:
      - database
      - queue_broker
      - app
    networks:
      - botmydesk-internal
    env_file:
      - .env

  app_task_worker:  # Required for background processing
    build:
      context: .
      target: prod-app-worker
    restart: always
    depends_on:
      - database
      - queue_broker
      - app_task_scheduler
      - app
    networks:
      - botmydesk-internal
    env_file:
      - .env

  queue_broker:  # Required for background processing
    image: rabbitmq
    restart: always
    networks:
      - botmydesk-internal

  prod_web:
    image: nginx
    restart: always
    volumes:
     - ./docker/nginx/templates:/etc/nginx/templates
    networks:
      - botmydesk-internal
    ports:
    # @TODO: Check whether you need to map port 80, 443 or (like below) 8080 for another proxy in front of this one...
     - "8080:80"

